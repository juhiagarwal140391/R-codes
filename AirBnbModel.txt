data D4;
set SessnTrainTestD;
if date_first_booking=. then dataType=1;
else dataType=0;
run;
/*Start here*/
/*customer base who have timestamp between 201401 and 201406*/
data train_users_3;
set train_users_2;
format dataTFlag best1.;
format datevar date9.;
aa=substr(put(timestamp_first_active,14.),1,8);
/*bb=input(timestamp_first_active,yymmdd10.);*/
year1=input(substr(aa,1,4),4.);
month1=input(substr(aa,5,2),2.);
date1=input(substr(aa,7,2),2.);
dateVar=mdy(month1,date1,year1);
if aa >='201401' and aa <='201406';
dataTFlag=1;
run;
proc freq data=train_users_3;
table aa;
run;

proc sql;
create table stat as
select min(timestamp_first_active),max(timestamp_first_active)
from test_users;
quit;

data test_users1;
set test_users(drop=date_first_booking);
format dataTFlag best1.;
format datevar date9.;
aa=substr(put(timestamp_first_active,14.),1,8);
year1=input(substr(aa,1,4),4.);
month1=input(substr(aa,5,2),2.);
date1=input(substr(aa,7,2),2.);
dateVar=mdy(month1,date1,year1);
dataTflag=0;
run;
data test_users2;
set test_users1;
format date_first_booking yymmdd10.;
/*making a new col with data type as date*/
run;

data train_testD(drop=aa month1 date1 year1);
set train_users_3 test_users2;
run;
proc contents data=train_testD;
run;

/*base data set created*/
proc sql;
create table SessnTrainTestD as
select * from sessions S join train_testD T
on S.user_id=T.id;
quit;

proc sql;
create table countingIds as 
select  count(user_id), count(id) from SessnTrainTestD;
quit;

proc summary data=train_users_2;
var date_;


proc sql;
select count(*) from train_users_2 where date_first_booking is null;
quit;

proc contents data=sessions;
run;

proc sql;
create table sessions1 as 
select user_id,
case when action is null then 'other' else action end as action,
/*case when sum(secs_elapsed) is null then 0 else sum(secs_elapsed) end as TmeActn*/
sum(secs_elapsed) as TmeActn
from sessions
group by user_id,action
having user_id is not null;
quit;
proc sql;
select distinct age_bucket from age_gender_bkts;
quit;

data AgeGender(drop=age_bucket);
set age_gender_bkts;
/*format numb best7.;*/
/*numb=input(age_bucket,best7.);*/

minRng=input(scan(age_bucket,1),3.);
maxRng=input(scan(age_bucket,2),3.);
if minRng=100 then maxRng=104;
run;
proc sql;
select distinct(signup_method) from train_testd;
quit;
proc sql;
create table TrainSessions as
select * from train_testd T join sessions1 S
on T.id=S.user_id;
quit;

data trainsessions12;
set trainsessions(obs=1000);
run;
proc contents data=TrainSessions;
run;
proc sql;
select distinct(country_destination) from TrainSessions;
quit;
/*Data cleaning*/
 

proc sql;
create table dd as 
select * from TrainSessions where 
date_account_created > date_first_booking and date_first_booking is not null;
quit;

proc sql;
select distinct(action)
from TrainSessions;
quit;
proc freq data=trainsessions;
table action;


data TrainSessionsEncoded(drop=gender signup_method signup_app first_device_type affiliate_channel affiliate_provider);
set TrainSessions;
if gender="FEMALE" then genderL=1;
if gender="MALE" then genderL=2;
if gender="OTHER" then genderL=3;
if gender="-unknown-" then genderL=4;
if signup_method="Basic" then SignupML=1;
if signup_method="Facebook" then SignupML=2;
if signup_method="Google" then SignupML=3;
if signup_method="weibo" then SignupML=4;
if signup_app="Android" then signupAppL=1;
if signup_app="iOS" then signupAppL=2;
if signup_app="Moweb" then signupAppL=3;
if signup_app="Web" then signupAppL=4;
if first_device_type="Android Phone" then FrstDeviceL=1;
if first_device_type="Android Tablet" then FrstDeviceL=1;
if first_device_type="Mac Desktop" then FrstDeviceL=2;
if first_device_type="iPad" then FrstDeviceL=2;
if first_device_type="iPhone" then FrstDeviceL=2;
if first_device_type="Windows Desktop" then FrstDeviceL=3;
if first_device_type="Desktop (Other)" then FrstDeviceL=3;
if first_device_type="SmartPhone (Other)" then FrstDeviceL=3;
if first_device_type="Other/Unknown" then FrstDeviceL=4;
if affiliate_channel = "api" then AffliateChannelL =1;
if affiliate_channel = "content" then AffliateChannelL =2;
if affiliate_channel = "direct" then AffliateChannelL =3;
if affiliate_channel = "other" then AffliateChannelL =8;
if affiliate_channel = "remarketing" then AffliateChannelL =4;
if affiliate_channel = "sem-brand" then AffliateChannelL =5;
if affiliate_channel = "sem-non-brand" then AffliateChannelL =6;
if affiliate_channel = "seo" then AffliateChannelL =7;
if affiliate_provider ="bing" or affiliate_provider ="google" 
or affiliate_provider ="yahoo" or affiliate_provider ="baidu" then affliateProviderL= 1;
if affiliate_provider ="craigslist" then affliateProviderL= 2;
if affiliate_provider ="daum" then affliateProviderL= 3;
if affiliate_provider ="direct" then affliateProviderL= 4;
if affiliate_provider ="email-marketing" then affliateProviderL= 5;
if affiliate_provider ="facebook" or affiliate_provider ="facebook-open-graph" then affliateProviderL= 6;
if affiliate_provider ="gsp" then affliateProviderL= 7;
if affiliate_provider ="meetup" then affliateProviderL= 8;
if affiliate_provider ="naver" then affliateProviderL= 9;
if affiliate_provider ="other" then affliateProviderL= 12;
if affiliate_provider ="padmapper" then affliateProviderL= 10;
if affiliate_provider ="vast" then affliateProviderL= 11;
if affiliate_provider ="yandex" then affliateProviderL= 13;

if first_browser="Chrome" then FBrowserL=1;
if first_browser="Safari" then FBrowserL=1;
if first_browser="Firefox" then FBrowserL=2;
if first_browser="Mobile Safari" then FBrowserL=2;
if first_browser="IE" then FBrowserL=3;
if first_browser="Chrome Mobile" then FBrowserL=4;
if first_browser="Android Browser" then FBrowserL=4;
if first_browser="Opera" then FBrowserL=4;
if first_browser="Silk" then FBrowserL=4;
if first_browser="Chromium" then FBrowserL=4;
if first_browser="AOL Explorer" then FBrowserL=4;
if first_browser="Mobile Firefox" then FBrowserL=4;
if first_browser="Apple Mail" then FBrowserL=4;
if first_browser="Maxthon" then FBrowserL=4;
if first_browser="BlackBerry Browser" then FBrowserL=4;
if first_browser="IE Mobile" then FBrowserL=4;
if first_browser="IceWeasel" then FBrowserL=4;
if first_browser="RockMelt" then FBrowserL=4;
if first_browser="SiteKiosk" then FBrowserL=4;
if first_browser="Sogou Explorer" then FBrowserL=4;
if first_browser="Yandex.Browser" then FBrowserL=4;
if first_browser="Avant Browser" then FBrowserL=5;
if first_browser="CoolNovo" then FBrowserL=5;
if first_browser="Googlebot" then FBrowserL=5;
if first_browser="IceDragon" then FBrowserL=5;
if first_browser="Iron" then FBrowserL=5;
if first_browser="Mozilla" then FBrowserL=5;
if first_browser="Opera Mini" then FBrowserL=5;
if first_browser="Outlook 2007" then FBrowserL=5;
if first_browser="Pale Moon" then FBrowserL=5;
if first_browser="SeaMonkey" then FBrowserL=5;
if first_browser="TenFourFox" then FBrowserL=5;
if first_browser="TheWorld Browser" then FBrowserL=5;
if first_browser="wOSBrowser" then FBrowserL=5;
if first_browser="-unknown-" then FBrowserL=6;

if language="en" then LangL=1;
if language="zh" then LangL=2;
if language="ko" then LangL=2;
if language="fr" then LangL=2;
if language="es" then LangL=2;
if language="de" then LangL=2;
if language="ru" then LangL=2;
if language="it" then LangL=2;
if language="pt" then LangL=2;
if language="ja" then LangL=2;
if language="sv" then LangL=2;
if language="nl" then LangL=2;
if language="tr" then LangL=2;
if language="fi" then LangL=2;
if language="el" then LangL=2;
if language="da" then LangL=2;
if language="th" then LangL=2;
if language="pl" then LangL=2;
if language="cs" then LangL=2;
if language="no" then LangL=3;
if language="is" then LangL=3;
if language="id" then LangL=3;
if language="hu" then LangL=3;
if language="ca" then LangL=3;
if language="-u" then LangL=4;
run;

proc freq data=TrainsessionsEncoded;
table action;
run;

proc sql;
create table TrainS as
select * from Train_users_2 T join sessions s on t.id=s.user_id;
quit;

data TrainS;
set TrainS;
TrainingFlag=1;
run;

proc freq data=TrainS;
table action;
run;










